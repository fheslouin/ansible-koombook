---
    - name: Update packages list
      apt: update_cache=yes cache_valid_time=3600

    - name: Install more package
      apt: name={{ item }} state=latest
      with_items:
       - lsb-release
       - vim
       - locate
       - git
       - unzip
       - python-pip
       - bash-completion
       - aptitude

    - name: Install sslh
      apt: name=sslh

    - name: Copy SSHL config file
      copy: src=sslh dest=/etc/default/sslh owner=root group=root mode=0644 backup=yes
      notify: update sslh

    - name: Upgrade packages
      apt: upgrade=safe

    - name: Add user KoomBook
      user: name={{username}}

    - name: Copy .bashrc for root
      copy: src=bashrc dest=/root/.bashrc owner=root

    - name: Copy vimrc for root
      copy: src=vim dest=/etc/vim/vimrc owner=root

    - name: Copy known_hosts file
      copy: src=known_hosts dest=/root/.ssh/known_hosts owner=root

    - hostname: name={{ hostname }}

    - name: Set timezone variables
      copy: content={{ timezone }} dest=/etc/timezone owner=root group=root mode=0644 backup=yes
      notify: update timezone

    # - name: Copy patch U-Boot package
    #   get_url: url={{filer_bsf}}/linux-u-boot-lime2_4.3_armhf.deb dest=/tmp/linuxUboot.deb owner=root group=root mode=755
    #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

    # - name: install patch U-Boot package
    #   apt:  deb=/tmp/linuxUboot.deb
    #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

    - name: List services to restart (1/2)
      shell: checkrestart | grep ^service | awk '{print $2}'
      register: services
      changed_when: False

    # - stat: path=/boot/bin/lime2.fex
    #   register: st

    # - name: Copy fex.file
    #   template: src=lime2.fex.j2 dest=/boot/bin/lime2.fex
    #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and st.stat.exists == False

    # - name: Build binary from fex
    #   shell: /usr/local/bin/fex2bin lime2.fex > lime2.bin chdir=/boot/bin/
    #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and st.stat.exists == False

    - name: Copy visudo file
      template: src=visudo.j2 dest=/etc/sudoers.d/shutdown owner=root group=root mode=0440

    # - file: path=/media/hdd state=directory
    #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

    # - mount: name=/media/hdd/ src=/dev/sda1 fstype=ext4 state=mounted
    #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"   
    #   ignore_errors: yes

    - tasks:
      include: ../../../installed_software.yml task=system